// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/domain/repository/rate.go

// Package mock_repository is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/historical-rate/internal/app/domain"
)

// MockIHistoricalRate is a mock of IHistoricalRate interface.
type MockIHistoricalRate struct {
	ctrl     *gomock.Controller
	recorder *MockIHistoricalRateMockRecorder
}

// MockIHistoricalRateMockRecorder is the mock recorder for MockIHistoricalRate.
type MockIHistoricalRateMockRecorder struct {
	mock *MockIHistoricalRate
}

// NewMockIHistoricalRate creates a new mock instance.
func NewMockIHistoricalRate(ctrl *gomock.Controller) *MockIHistoricalRate {
	mock := &MockIHistoricalRate{ctrl: ctrl}
	mock.recorder = &MockIHistoricalRateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHistoricalRate) EXPECT() *MockIHistoricalRateMockRecorder {
	return m.recorder
}

// GetAnalyze mocks base method.
func (m *MockIHistoricalRate) GetAnalyze() ([]domain.AnalyzeReport, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAnalyze")
	ret0, _ := ret[0].([]domain.AnalyzeReport)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAnalyze indicates an expected call of GetAnalyze.
func (mr *MockIHistoricalRateMockRecorder) GetAnalyze() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAnalyze", reflect.TypeOf((*MockIHistoricalRate)(nil).GetAnalyze))
}

// GetByDate mocks base method.
func (m *MockIHistoricalRate) GetByDate(date string) ([]domain.Rate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByDate", date)
	ret0, _ := ret[0].([]domain.Rate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByDate indicates an expected call of GetByDate.
func (mr *MockIHistoricalRateMockRecorder) GetByDate(date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByDate", reflect.TypeOf((*MockIHistoricalRate)(nil).GetByDate), date)
}

// GetLatest mocks base method.
func (m *MockIHistoricalRate) GetLatest() ([]domain.Rate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatest")
	ret0, _ := ret[0].([]domain.Rate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatest indicates an expected call of GetLatest.
func (mr *MockIHistoricalRateMockRecorder) GetLatest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatest", reflect.TypeOf((*MockIHistoricalRate)(nil).GetLatest))
}
